/**
* @author ACK
* @date 2019/01/16
* @param なし
* @description 日付関連ユーティリティ
* @return なし
*/
/** 履歴
* 2019/01/16 新規
*/
public class DateUtils {
    
    private static final Pattern datePattern1 = Pattern.compile('^(\\d{4})-(\\d{1,2})-(\\d{1,2})$');    // 西暦1
    private static final Pattern datePattern2 = Pattern.compile('^(\\d{4})年(\\d{1,2})月(\\d{1,2})日$');   // 西暦2
    private static final Pattern datePattern3 = Pattern.compile('^([^\\x01-\\x7E]+)(\\d{1,2}|元)年(\\d{1,2})月(\\d{1,2})日$');  // 和暦
    
    private static final Map<String,Integer> startYearMapByEra = new Map<String,Integer>{'大正'=>1912
        ,'昭和'=>1926
        ,'平成'=>1989
    };
    
    /**
     * @description 日付変換
     * @param str 文字列
     * @return 日付
     */
    public static Date toDate(String str) {
        
        try{
            Matcher matcher1 = datePattern1.matcher(str);
            if(matcher1.matches() && matcher1.hitEnd()){
                return Date.newInstance(Integer.valueOf(matcher1.group(1)), Integer.valueOf(matcher1.group(2)), Integer.valueOf(matcher1.group(3)));
            }
            
            Matcher matcher2 = datePattern2.matcher(str);
            if(matcher2.matches() && matcher2.hitEnd()){
                return Date.newInstance(Integer.valueOf(matcher2.group(1)), Integer.valueOf(matcher2.group(2)), Integer.valueOf(matcher2.group(3)));
            }
            
            Matcher matcher3 = datePattern3.matcher(str);
            if(matcher3.matches() && matcher3.hitEnd()){
                String era = matcher3.group(1);
                system.debug(era);
                if(startYearMapByEra.containsKey(era)){
                    Integer startYear = startYearMapByEra.get(era);
                    String strEraYear = matcher3.group(2);
                    Integer eraYear;
                    if(strEraYear == '元'){
                        eraYear = 1;
                    }else{
                        eraYear = Integer.valueOf(strEraYear);
                    }
                    return Date.newInstance(startYear + eraYear - 1, Integer.valueOf(matcher3.group(3)), Integer.valueOf(matcher3.group(4)));
                }
            }
        }catch(Exception e){
            system.debug(e);
        }
        
        return null;
    }
}
